inductive {
    type list (A : Type1) : Type1 {
        nil : list[A]
        cons : {_ : A} {_ : list[A]} list[A]
    }
}

int : Type1
zero : int

bool : Type1
true : bool
false : bool

#reduce match ((list[int].cons) zero) list[int].nil as l() in bool {
    nil() => false,
    cons(h, t) => true
}