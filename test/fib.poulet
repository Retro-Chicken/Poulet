#import 'test.poulet'

n1 : nat := succ(n0)


nat : Type1 := {X : Type1} {f : {_ : X} X} {_ : X} X

fibstep : {_ : pair(nat)} pair(nat) := \p : pair(nat) -> (((construct_pair) nat) (p) (second) nat) ((plus) (p) (first) nat) (p) (second) nat
fibstart : pair(nat) := construct_pair(nat, n0, n1)
fib : {_ : nat} nat := \n : nat -> n(pair(nat), fibstep, fibstart)(first(nat))

#reduce fib(succ(succ(succ(succ(succ(succ(n1)))))))
#reduce n0