open chapter1

n0 : nat[] := nat[].Z
n1 : nat[] := nat[].S(n0)

#assert pr1(nat[], nat[], pair[nat[], nat[]].mk(n0, n1)) ~ n0

#assert let x := n0 in x ~ n0
#assert (\y : nat[] -> x)(n1) where x := n0 ~ n0

#reduce let x := n0 in x

theorem1 : nat[] -> nat[] -> nat[] := Proof {
    f : nat[] -> nat[] := \n : nat[] -> n,
    \m : nat[] -> f
}